name: Campaign data delivery
inputs:
- {name: score_date, type: String}
- {name: score_date_delta, type: Integer}
- {name: project_id, type: String}
- {name: dataset_id, type: String}
- {name: region, type: String}
implementation:
  container:
    image: northamerica-northeast1-docker.pkg.dev/cio-workbench-image-np-0ddefe/wb-platform/pipelines/kubeflow-pycaret:latest
    command:
    - sh
    - -c
    - |2

      if ! [ -x "$(command -v pip)" ]; then
          python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip
      fi

      PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'kfp==1.8.11' && "$0" "$@"
    - sh
    - -ec
    - |
      program_path=$(mktemp -d)
      printf "%s" "$0" > "$program_path/ephemeral_component.py"
      python3 -m kfp.v2.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"
    - "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing\
      \ import *\n\ndef campaign_data_delivery(score_date: str,\n                \
      \      score_date_delta: int,\n                      project_id: str,\n    \
      \                  dataset_id: str,\n                      region: str):\n\n\
      \    from google.cloud import bigquery\n    import logging \n    from datetime\
      \ import datetime\n    # For wb\n    # import google.oauth2.credentials\n  \
      \  # CREDENTIALS = google.oauth2.credentials.Credentials(token)\n\n    client\
      \ = bigquery.Client(project=project_id, location=region)\n    job_config = bigquery.QueryJobConfig()\n\
      \n    # Change dataset / table + sp table name to version in bi-layer\n    query\
      \ =\\\n        f'''\n\n            DECLARE score_date DATE DEFAULT \"{score_date}\"\
      ;\n\n            CALL call_to_retention_dataset.bq_sp_campaign_data_element_pxp(score_date);\
      \ \n            CALL call_to_retention_dataset.bq_sp_campaign_data_element_hcr(score_date);\n\
      \n            SELECT\n                *\n            FROM {dataset_id}.INFORMATION_SCHEMA.PARTITIONS\n\
      \            WHERE table_name='bq_call_to_retention_scores'\n\n        '''\n\
      \n    df = client.query(query, job_config=job_config).to_dataframe()\n    print('......data\
      \ loaded to divg_compaign_element.bq_campaign_data_element')\n\n"
    args:
    - --executor_input
    - {executorInput: null}
    - --function_to_execute
    - campaign_data_delivery
